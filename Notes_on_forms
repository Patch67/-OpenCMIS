User sends ULR to Django via a HTTP get request from a browser.
Django processes URL and calls a view function.  In case of view class calls Class.as_view() to get the function.
View does some processing and builds up a context, a dictionary containing data.
Finally the view renders a template together with the context data to generate a HTML page which is returned to the browser.


In the case of a form it's a bit different.
User sends URL plus form data via a HTTP post request from a browser.
Django processes the URL and calls a view function.
View function identifies the incoming request then validates the data.
If the data passes validation the database is updated accordingly.
If the data fails the validation request the page is sent back to the users with error notifications.

There are prebuilt classes to handle CRUD database operations automatically.
List
Create
Detail
Update
Delete

However there are cases when a simple CRUD form is not enough, i.e. when you need to handle relationships in forms.
This is the case with Issues and Updates.  I want a single form to show the issue data but also to allow the display of
updates and in addition allow more updates to be added all from the same form.
One issue may have several updates.

None of the above classes would be able to manage that.

Django also provides forms where the entire form structure can be defined separately from the model.
This may be useful for data that is not to be kept in a database table but in my case this is just repeating the
definitions I've already made in the model classes.

Finally there are Model Forms.
I need to look at these bit more closely as they may give me the flexibility I need.

Autogenerated forms.
Django can make autogen forms but I don't like them as they don't produce nice BootStrap.
https://docs.djangoproject.com/en/1.10/topics/forms/modelforms/


Manually generated forms.
You can make your own HTML forms and get Django to process then data from the POST request, however this bypasses
the validation that Django already does so might not be such a a good idea.


